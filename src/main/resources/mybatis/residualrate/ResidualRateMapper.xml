<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ResidualRateMapper">
	
	<!--表名 -->
	<sql id="tableName">
		nmw_residualrateResidualRate
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		test,	
		ResidualRate_ID
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{test},	
		#{ResidualRate_ID}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			ResidualRate_ID = #{ResidualRate_ID}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			test = #{test},
		ResidualRate_ID = ResidualRate_ID
		where 
		ResidualRate_ID = #{ResidualRate_ID}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			ResidualRate_ID = #{ResidualRate_ID}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			ResidualRate_ID in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>


    <select id="queryDayUser" parameterType="pd" resultType="String">
        SELECT id from yh_user WHERE  FROM_UNIXTIME(create_time,'%Y-%m-%d')=#{start_day}
    </select>


    <select id="queryUserDate" parameterType="pd" resultType="String">
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')=#{queryDate}
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
            <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
              #{item,jdbcType=VARCHAR}
            </foreach>
            AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 1 DAY)
        AND #{queryDate} + INTERVAL 2 DAY>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 2 DAY)
        AND (#{queryDate} + INTERVAL 3 DAY)>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 3 DAY)
        AND (#{queryDate} + INTERVAL 4 DAY)>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 4 DAY)
        AND (#{queryDate} + INTERVAL 5 DAY)>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 5 DAY)
        AND (#{queryDate} + INTERVAL 6 DAY)>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 6 DAY)
        AND (#{queryDate} + INTERVAL 7 DAY)>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate}+ INTERVAL 7 DAY)
        AND (#{queryDate} + INTERVAL 14 DAY)>=DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>(#{queryDate} + INTERVAL 14 DAY)
        AND (#{queryDate} + INTERVAL 30 DAY)>DATE_FORMAT(create_time,'%Y-%m-%d')
        UNION ALL
        SELECT count(id) from nmw_order WHERE uid in
        <foreach item="item" index="index" collection="tempUserList" open="(" separator="," close=")">
            #{item,jdbcType=VARCHAR}
        </foreach>
        AND DATE_FORMAT(create_time,'%Y-%m-%d')>=(#{queryDate} + INTERVAL 30 DAY)
    </select>
</mapper>